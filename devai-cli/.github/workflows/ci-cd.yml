name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔍 Run linting
        run: npm run lint
        
      - name: 🧪 Run tests
        run: npm run test:coverage
        
      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          
      - name: 🏗️ Build project
        run: npm run build

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build project
        run: npm run build
        
      - name: 📋 Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view devai-cli version 2>/dev/null || echo "0.0.0")
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "published=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: 🚀 Publish to NPM
        if: steps.version-check.outputs.changed == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: 🏷️ Create GitHub Release
        if: steps.version-check.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current }}
          release_name: Release v${{ steps.version-check.outputs.current }}
          body: |
            ## 🚀 What's New
            
            Check the [CHANGELOG.md](CHANGELOG.md) for detailed changes.
            
            ## 📦 Installation
            
            ```bash
            npm install -g devai-cli
            ```
            
            ## 🔧 Quick Start
            
            ```bash
            devai config
            devai commit
            ```
          draft: false
          prerelease: false